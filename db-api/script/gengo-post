#!/usr/bin/env ruby
require 'pg'
require 'gengo'
db = PG::Connection.new(dbname: 'd50b', user: 'd50b')

# GET RAW INPUT FILE
raise 'USAGE: translate {filename}' unless ARGV[0] && File.exist?(ARGV[0])
raw_filename = ARGV[0].strip
raw = File.read(raw_filename).strip

# CHANGE FILENAME?
print "Unless you want the filename to be #{raw_filename}, type new one now: "
new_filename = STDIN.gets.strip
filename = (new_filename.size > 0) ? new_filename : raw_filename
puts "OK. Filename is «#{filename}»"

# INSERT INTO DATABASE:
res = db.exec_params("INSERT INTO core.translation_files(filename, raw) VALUES ($1, $2) RETURNING id", [filename, raw])
raise 'error' unless /\A[0-9]+\Z/ === res[0]['id']
id = Integer(res[0]['id'])
puts "ID is #{id}"

# PARSE INTO SENTENCES
res = db.exec_params("SELECT * FROM core.parse_translation_file($1)", [id])

# CONFIRM
res = db.exec_params("SELECT sortid, en FROM core.translations WHERE file_id = $1 ORDER BY sortid", [id])
testfile = "/tmp/#{id}.txt"
File.open(testfile, 'w') do |f|
	res.each do |r|
		f.puts "%d\t%s" % [r['sortid'], r['en']]
	end
end
print "Go look at #{testfile} in another terminal. Type 'ok' if it's OK: (otherwise I'll delete) "

# DELETE AND STOP unless 'ok'
unless 'ok' == STDIN.gets.strip
	db.exec_params('DELETE FROM core.translations WHERE file_id = $1', [id])
	db.exec_params('DELETE FROM core.translation_files WHERE id = $1', [id])
	puts "DELETED"
	exit
end

# GET SENTENCES
res = db.exec_params("SELECT code, sortid, en FROM core.translations WHERE file_id = $1 ORDER BY sortid", [id])
howmany = res.to_a.size

pub = db.exec("SELECT v FROM core.configs WHERE k='gengo_public'")[0]['v']
pri = db.exec("SELECT v FROM core.configs WHERE k='gengo_private'")[0]['v']
gengo = Gengo::API.new(public_key: pub, private_key: pri, sandbox: false)
languages = %w(es-la fr pt-br zh)

languages.each do |lang|
	# http://developers.gengo.com/v2/api_methods/jobs/
	# http://developers.gengo.com/v2/api_methods/payloads/index.html
	jobs = {}
	res.each do |r|
		jobs[r['code']] = {
			body_src: r['en'],
			lc_src: 'en',
			lc_tgt: lang,
			tier: 'standard',
			type: 'text',
			slug: 'sivers.org/%s # %d' % [filename, r['sortid']],
			as_group: 1,
			position: r['sortid'],
			force: 1,
			pupose: 'Online content',
			tone: 'Informal',
			auto_approve: 0,
			custom_data: r['code'],
			comment: 'http://sivers.org/%s for context. This is sentence #%d of %d.' % [filename, r['sortid'], howmany]
		}
	end

	g = gengo.postTranslationJobs(jobs: jobs)
	db.exec_params("INSERT INTO core.translation_orders(id, file_id, lang) VALUES($1, $2, $3)", [
		g['response']['order_id'], id, lang[0,2]
	])
end

